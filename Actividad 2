        org 0000       ; Origen del código en la dirección de memoria 0x0000

        ; --- Conversión del valor en B (Hexadecimal) a BCD ---
        ld a, b          ; Cargar el valor de B en A
        ld h, 0          ; Inicializar H para las decenas en BCD
        ld l, 0          ; Inicializar L para las unidades en BCD

conv_b_to_bcd:
        cp 0Ah           ; Comparar A con 10
        jr c, store_b    ; Si A < 10, saltar a almacenar el valor
        sub 0Ah          ; Restar 10 de A
        inc h            ; Incrementar decenas en H
        jr conv_b_to_bcd ; Repetir el bucle

store_b:
        ld b, h          ; Almacenar las decenas en B
        ld c, a          ; Almacenar las unidades en C

        ; --- Conversión del valor en C (Hexadecimal) a BCD ---
        ld a, c          ; Cargar el valor de C en A
        ld h, 0          ; Inicializar H para las decenas en BCD
        ld l, 0          ; Inicializar L para las unidades en BCD

conv_c_to_bcd:
        cp 0Ah           ; Comparar A con 10
        jr c, store_c    ; Si A < 10, saltar a almacenar el valor
        sub 0Ah          ; Restar 10 de A
        inc h            ; Incrementar decenas en H
        jr conv_c_to_bcd ; Repetir el bucle

store_c:
        ld d, h          ; Almacenar las decenas en D
        ld e, a          ; Almacenar las unidades en E

        ; --- Suma de las unidades ---
        ld a, c          ; Cargar las unidades de C en A
        add a, e         ; Sumar las unidades de E a A
        daa              ; Ajustar A al formato BCD
        ld l, a          ; Guardar el resultado en L

        ; --- Manejo del acarreo de unidades ---
        ld a, 0          ; Cargar 0 en A para manejar el acarreo
        jr nc, no_carry_units ; Si no hay acarreo, saltar

        inc a            ; Si hay acarreo, incrementamos A

no_carry_units:
        ; --- Suma de las decenas ---
        ld a, b          ; Cargar las decenas de B en A
        add a, d         ; Sumar las decenas de D a A
        add a, 0         ; Añadir el acarreo de las unidades
        daa              ; Ajustar A al formato BCD
        ld h, a          ; Guardar el resultado en H

        ; --- Manejo del acarreo de decenas ---
        ld a, 0          ; Reiniciar A para manejar el acarreo
        jr nc, no_carry_tens ; Si no hay acarreo, saltar

        inc a            ; Si hay acarreo, incrementamos A

no_carry_tens:
        ; --- El valor en A es la centena ---
        ; El resultado final está en A (centenas), H (decenas), y L (unidades)
        nop              ; No Operation (espera aquí)
        halt             ; Detener el procesador

        end              ; Fin del programa

